<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.librarylyh.mapper.BoardMapper">


	<sql id="criteria">
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach item='type' collection="typeArr">
				<trim prefix="OR"><!-- 맨 앞에 생성되는 "OR 제거" -->
					<choose>
						<when test="type == 'T'.toString()">
							title like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'C'.toString()">
							content like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'W'.toString()">
							nickName like '%'||#{keyword}||'%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>


	<select id="getList" resultType="kr.co.librarylyh.domain.BoardVO">
		<![CDATA[
			select * from tbl_board where bno > 0 
		]]>
	</select>

	
 	<insert id="insertSelectKey">
		<!-- selectKey는 DB에 명령을 한번만 보내며, 우선 입력한 값의 결과값을 다음 쿼리로 바로 return 시켜주는 것 -->
		<selectKey keyProperty="bno" order="BEFORE"
			resultType="long">
			select seq_board.nextval from dual
		</selectKey>

		insert into tbl_board (bno,title,content, category, nickName, boardUserId)
		values (#{bno},	#{title}, #{content}, #{category}, #{nickName}, #{boardUserId})
	</insert>
	
	<select id="read" resultType="kr.co.librarylyh.domain.BoardVO">
		select * from tbl_board where bno =	#{bno}
	</select>


	<delete id="delete">
		delete tbl_board where bno = #{bno}
	</delete>

	<update id="update">
	 	<![CDATA[
			update tbl_board
			set title= #{title},
			content=#{content},
			category = #{category},
			updateDate = sysdate
			where bno = #{bno}
		]]>
	</update>
	
<select id="getListWithPaging" resultType="kr.co.librarylyh.domain.BoardVO">
  <![CDATA[
  select 
    bno, title, content, category, regdate, updatedate, replycnt, viewNum, likeNum, fileName
  from 
      (
      select /*+INDEX_DESC(tbl_board pk_board) */
        rownum rn, bno, title, content, category, regdate, updatedate, replycnt, viewNum, likeNum, fileName
      from 
        tbl_board
      where 
  ]]>

  <include refid="criteria"></include> 

  <![CDATA[
      
      rownum <= #{pageNum} * #{amount}
      )
  where rn > (#{pageNum} -1) * #{amount}
  ]]>
</select>
  

	<select id="getTotalCount" resultType="int">
		select count(*) from tbl_board where
		<!-- refid(reference id)는 반복되는 쿼리를 미리 작성해 놓고 재활용 할 수 있게 해줌 -->
		<include refid="criteria"></include> 
		
		bno > 0
		
	</select>
	
	<update id="updateReplyCnt">
	<![CDATA[  
		update tbl_board set replycnt = replycnt + #{amount} where bno = #{bno}
	]]>
	</update>
	
	
	<!-- 게시판 조회수 -->
    <update id="boardViewNum" parameterType="Long">
    	<![CDATA[  
    		update tbl_board set
    		viewNum = viewNum + 1
    		where bno=#{bno}
    	]]>
    </update>
    
    <!-- 게시물 졸아요 관련-->
    
    <!-- 게시글 좋아요 여부 -->
    <select id="checkLike" resultType="kr.co.librarylyh.domain.LikeVO">
		<![CDATA[ 
			select * from tbl_like where bno = #{bno} 
		]]>
	</select>
    
	
	<!-- 게시글 좋아요 tbl_like-->
	<insert id="insertLike">
		<![CDATA[
			insert into tbl_like (bno, userId)
			values (#{bno}, #{likeUserId})
		]]>
	</insert>
	
	<!-- 게시판 좋아요 tbl_board -->
    <update id="boardLikeNumUp" parameterType="Long">
    	<![CDATA[  
    		update tbl_board set
    		likeNum = likeNum + 1
    		where bno=#{bno}
    	]]>
    </update>
    
	
	<!-- 게시글 좋아요 (취소) tbl_like -->
	<delete id="deleteLike">
		<![CDATA[
			delete tbl_like where bno = #{bno} and userId = #{likeUserId}
		]]>
	</delete>
	
		<!-- 게시판 좋아요 (취소) tbl_board -->
    <update id="boardLikeNumDown" parameterType="Long">
    	<![CDATA[  
    		update tbl_board set
    		likeNum = likeNum - 1
    		where bno=#{bno}
    	]]>
    </update>
    
    <!-- 게시글 제목 옆 파일 넣기 -->
    <!-- 첨부파일 확장자 이름을 대입 -->
	<insert id="insertFileName">
		insert into tbl_attach (uuid, uploadPath, fileName,
		fileType)
		values (#{uuid}, #{uploadPath}, #{fileName},
		#{fileType}) where bno = #{bno}
	</insert>
	


</mapper>