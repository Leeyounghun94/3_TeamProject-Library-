<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.librarylyh.mapper.BookListMapper">

  <!--  검색 조건을 위한 공통 SQL 정의  -->
  <sql id="searchConditions">
    <!--  검색 조건들을 동적으로 추가  -->
    <if test="searchQuery != null and searchQuery != ''">
      <![CDATA[ AND b.book LIKE '%'||#{searchQuery} ||'%' ]]>
    </if>
    <if test="categoryId != null and categoryId != ''">
      <![CDATA[ AND c.categoryId LIKE CONCAT(#{categoryId}, '%') ]]>
    </if>
    <if test="rentalAvailable != null and rentalAvailable != ''">
      <![CDATA[ AND b.rentalAvailable = #{rentalAvailable} ]]>
    </if>
    <if test="publicationDateFilter != null">
      <choose>
        <when test="publicationDateFilter == '3months'">
          <![CDATA[ AND b.publicationDate >= ADD_MONTHS(SYSDATE, -3) ]]>
        </when>
        <when test="publicationDateFilter == '6months'">
          <![CDATA[ AND b.publicationDate >= ADD_MONTHS(SYSDATE, -6) ]]>
        </when>
        <when test="publicationDateFilter == '1year'">
          <![CDATA[ AND b.publicationDate >= ADD_MONTHS(SYSDATE, -12) ]]>
        </when>
      </choose>
    </if>
  </sql>
  <!--  책 목록 조회 (검색 및 페이징 포함)  -->
  <select id="getListWithFiltersAndPaging" parameterType="map" resultType="kr.co.librarylyh.domain.BookListVO">
    <![CDATA[ SELECT * FROM ( SELECT ROW_NUMBER() OVER ( ORDER BY ]]>
    <!-- sort 기준대로 정렬해서 순번을 메기고 그 순서대로 결과를 전부 가져온다. (페이징) -->
    <!--  정렬 기준이 사용자가 선택한 경우  -->
    <if test="sort != null and sort != ''">
      <![CDATA[ ${sort} ]]>
    </if>
    <!--  기본 정렬 기준: 최신순  -->
    <if test="sort == null or sort == ''">
      <![CDATA[ b.publicationDate DESC ]]>
    </if>
    <![CDATA[ ) AS rnum, b.isbn13, b.book, b.author, b.publisher, b.publicationDate AS publicationDate, b.price, b.averageRating
    AS averageRating, b.reviewCount, b.bookCount, b.photo FROM book_tbl b ]]>
    <!--  카테고리 필터가 있는 경우에만 JOIN 추가  -->
    <if test="categoryId != null and categoryId != ''">
      <![CDATA[ LEFT JOIN book_category_tbl bc ON b.isbn13 = bc.isbn13 LEFT JOIN category_tbl c ON bc.categoryId = c.categoryId ]]>
    </if>
    <![CDATA[ WHERE 1=1 ]]>
    <!--  공통 검색 조건을 포함  -->
    <include refid="searchConditions"/>
    <![CDATA[ GROUP BY b.isbn13, b.book, b.author, b.publisher, b.publicationDate, b.price, b.averageRating, b.reviewCount, b.bookCount, b.photo )
    a WHERE rnum BETWEEN #{startRow} AND #{endRow} ]]>
  </select>
  <!--  총 책 수 조회  -->
  <select id="getTotalCount" parameterType="map" resultType="int">
    <![CDATA[ SELECT COUNT(DISTINCT b.isbn13) FROM book_tbl b ]]>
    <if test="categoryId != null and categoryId != ''">
      <![CDATA[ LEFT JOIN book_category_tbl bc ON b.isbn13 = bc.isbn13
      LEFT JOIN category_tbl c ON bc.categoryId = c.categoryId ]]>
    </if>
    <![CDATA[ WHERE 1=1 ]]>
    <!--  공통 검색 조건을 포함  -->
    <include refid="searchConditions"/>
  </select>
  <!--  책 추가  -->
  <insert id="insert">
    <![CDATA[ INSERT INTO book_tbl (isbn13, book, bookDescription, author, publisher, photo, weight, bookSize,
    rentalAvailable, price, pageCount, bookCount, averageRating, star1Count, star2Count, star3Count, star4Count, star5Count, reviewCount, publicationDate)
    VALUES (#{isbn13}, #{book}, #{bookDescription, jdbcType=CLOB}, #{author}, #{publisher}, #{photo}, #{weight}, #{bookSize}, #{rentalAvailable},
     #{price}, #{pageCount}, #{bookCount}, #{averageRating}, #{star1Count}, #{star2Count}, #{star3Count}, #{star4Count}, #{star5Count}, #{reviewCount}, #{publicationDate}) ]]>
  </insert>
  <!--  책 조회 (카테고리 정보는 따로)  -->
  <select id="read" parameterType="long" resultType="kr.co.librarylyh.domain.BookListVO">
    <![CDATA[
    SELECT b.*, bd.* FROM book_tbl b LEFT JOIN book_detail_tbl bd ON b.isbn13 = bd.isbn13
    WHERE b.isbn13 = #{isbn13} ]]>
  </select>

  <!-- 책 조회 시 카테고리 정보 제공 -->
  <select id="readCategoriesByISBN" parameterType="long" resultType="kr.co.librarylyh.domain.CategoryVO">
    <![CDATA[
    SELECT c.categoryId
    FROM book_category_tbl bc LEFT JOIN category_tbl c ON bc.categoryId = c.categoryId
    WHERE bc.isbn13 = #{isbn13} ]]>
  </select>

  <!--  책 수정  -->
  <update id="update">
    <![CDATA[ UPDATE book_tbl SET book = #{book}, bookDescription = #{bookDescription, jdbcType=CLOB}, price = #{price}, bookCount = #{bookCount},
    averageRating = #{averageRating}, rentalAvailable = #{rentalAvailable}, pageCount = #{pageCount}, weight = #{weight}, bookSize = #{bookSize},
    star1Count = #{star1Count}, star2Count = #{star2Count}, star3Count = #{star3Count}, star4Count = #{star4Count}, star5Count = #{star5Count}, reviewCount = #{reviewCount} WHERE isbn13 = #{isbn13} ]]>
  </update>
  <!--  책 삭제  -->
  <delete id="delete">
    <![CDATA[ DELETE FROM book_tbl WHERE isbn13 = #{isbn13} ]]>
  </delete>

  <!--  자동검색 기능용 제목검색쿼리  -->
  <select id="searchTitles" parameterType="string" resultType="kr.co.librarylyh.domain.BookListVO">
    <![CDATA[
    SELECT book, author
    FROM book_tbl WHERE LOWER(book) LIKE '%' || LOWER(#{query}) || '%'
    AND ROWNUM <= 5 ORDER BY book ASC
    ]]>
  </select>

</mapper>