<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.librarylyh.mapper.BookListMapper">

  <!-- 검색 조건을 위한 공통 SQL 정의 -->
  <sql id="searchConditions">
    <!-- 검색 조건을 동적으로 추가함 -->
    <if test="searchQuery != null and searchQuery != ''">
      <![CDATA[ AND b.book LIKE '%'||#{searchQuery} ||'%' ]]>
      <!-- 책 제목에 searchQuery가 포함된 데이터를 검색 -->
    </if>
    <if test="categoryId != null and categoryId != ''">
      <![CDATA[ AND c.categoryId LIKE CONCAT(#{categoryId}, '%') ]]>
      <!-- 카테고리 ID가 categoryId로 시작하는 데이터를 검색 -->
    </if>
    <if test="rentalAvailable != null and rentalAvailable != ''">
      <![CDATA[ AND b.rentalAvailable = #{rentalAvailable} ]]>
      <!-- 대여 가능 여부가 rentalAvailable과 일치하는 데이터를 검색 -->
    </if>
    <if test="publicationDateFilter != null">
      <choose>
        <when test="publicationDateFilter == '3months'">
          <![CDATA[ AND b.publicationDate >= ADD_MONTHS(SYSDATE, -3) ]]>
          <!-- 최근 3개월 내에 출판된 도서만 검색 -->
        </when>
        <when test="publicationDateFilter == '6months'">
          <![CDATA[ AND b.publicationDate >= ADD_MONTHS(SYSDATE, -6) ]]>
          <!-- 최근 6개월 내에 출판된 도서만 검색 -->
        </when>
        <when test="publicationDateFilter == '1year'">
          <![CDATA[ AND b.publicationDate >= ADD_MONTHS(SYSDATE, -12) ]]>
          <!-- 최근 1년 내에 출판된 도서만 검색 -->
        </when>
      </choose>
    </if>
  </sql>

  <!-- 책 목록 조회 (검색 및 페이징 포함) -->
  <select id="getListWithFiltersAndPaging" parameterType="map" resultType="kr.co.librarylyh.domain.BookListVO">
    <![CDATA[ SELECT * FROM ( SELECT ROW_NUMBER() OVER ( ORDER BY ]]>
    <!-- sort 기준대로 정렬해서 순번을 매기고 그 순서대로 결과를 가져옴 (페이징 적용) -->
    <if test="sort != null and sort != ''">
      <![CDATA[ ${sort} ]]>
      <!-- 사용자가 선택한 정렬 기준으로 정렬 -->
    </if>
    <if test="sort == null or sort == ''">
      <![CDATA[ b.publicationDate DESC ]]>
      <!-- 기본 정렬: 최신 출판일 순으로 정렬 -->
    </if>
    <![CDATA[ ) AS rnum, b.isbn13, b.book, b.author, b.publisher, b.publicationDate AS publicationDate, b.rentalAvailable, b.price, b.averageRating
    AS averageRating, b.reviewCount, b.bookCount, b.photo FROM book_tbl b ]]>
    <!-- 카테고리 필터가 있으면 카테고리 테이블과 LEFT JOIN -->
    <if test="categoryId != null and categoryId != ''">
      <![CDATA[ LEFT JOIN book_category_tbl bc ON b.isbn13 = bc.isbn13 LEFT JOIN category_tbl c ON bc.categoryId = c.categoryId ]]>
    </if>
    <![CDATA[ WHERE 1=1 ]]>
    <!-- 공통 검색 조건 적용 -->
    <include refid="searchConditions"/>
    <![CDATA[ GROUP BY b.isbn13, b.book, b.author, b.publisher, b.publicationDate, b.rentalAvailable, b.price, b.averageRating, b.reviewCount, b.bookCount, b.photo )
    a WHERE rnum BETWEEN #{startRow} AND #{endRow} ]]>
    <!-- 페이징 처리를 위해 rnum으로 시작 행부터 종료 행까지의 결과만 가져옴 -->
  </select>

  <!-- 총 책 수 조회 -->
  <select id="getTotalCount" parameterType="map" resultType="int">
    <![CDATA[ SELECT COUNT(DISTINCT b.isbn13) FROM book_tbl b ]]>
    <!-- 카테고리 필터가 있으면 카테고리 테이블과 LEFT JOIN -->
    <if test="categoryId != null and categoryId != ''">
      <![CDATA[ LEFT JOIN book_category_tbl bc ON b.isbn13 = bc.isbn13 LEFT JOIN category_tbl c ON bc.categoryId = c.categoryId ]]>
    </if>
    <![CDATA[ WHERE 1=1 ]]>
    <!-- 공통 검색 조건 적용 -->
    <include refid="searchConditions"/>
  </select>

  <!-- 책 추가 -->
  <insert id="insertBook">
    <![CDATA[
    INSERT INTO book_tbl
    (isbn13, book, author, publisher, price, rentalAvailable, photo, publicationDate, reviewCount, averageRating, bookCount)
    VALUES (#{isbn13, jdbcType=NUMERIC}, #{book}, #{author}, #{publisher}, #{price, jdbcType=NUMERIC}, #{rentalAvailable}, #{photo}, #{publicationDate}, #{reviewCount, jdbcType=NUMERIC}, #{averageRating, jdbcType=NUMERIC}, #{bookCount, jdbcType=NUMERIC})
  ]]>
  </insert>
  <!-- 책 상세 정보 추가 -->
  <insert id="insertBookDetail">
    <![CDATA[
    INSERT INTO book_detail_tbl
    (isbn13, bookDescription, pageCount, weight, bookSize, star1Count, star2Count, star3Count, star4Count, star5Count)
    VALUES (#{isbn13, jdbcType=NUMERIC}, #{bookDescription, jdbcType=CLOB}, #{pageCount, jdbcType=NUMERIC}, #{weight, jdbcType=VARCHAR}, #{bookSize, jdbcType=VARCHAR}, #{star1Count, jdbcType=CHAR}, #{star2Count, jdbcType=CHAR}, #{star3Count, jdbcType=CHAR}, #{star4Count, jdbcType=CHAR}, #{star5Count, jdbcType=CHAR})
  ]]>
  </insert>
  <!-- 책과 카테고리를 book_category_tbl에 여러 개 저장 -->
  <insert id="insertBookCategories">
    <![CDATA[
    INSERT INTO book_category_tbl (isbn13, categoryId)
    VALUES
  ]]>
    <foreach collection="categoryIds" item="categoryId" separator=",">
      <![CDATA[
      (#{isbn13, jdbcType=NUMERIC}, #{categoryId})
    ]]>
    </foreach>
  </insert>




  <!-- 책 조회 (카테고리 정보는 따로) -->
  <select id="read" parameterType="long" resultType="kr.co.librarylyh.domain.BookListVO">
    <![CDATA[ SELECT b.*, bd.* FROM book_tbl b LEFT JOIN book_detail_tbl bd ON b.isbn13 = bd.isbn13 WHERE b.isbn13 = #{isbn13} ]]>
    <!-- 책과 책의 상세 정보를 함께 조회 -->
  </select>

  <!-- 책 조회 시 카테고리 정보 제공 -->
  <select id="readCategoriesByISBN" parameterType="long" resultType="kr.co.librarylyh.domain.CategoryVO">
    <![CDATA[ SELECT c.categoryId FROM book_category_tbl bc LEFT JOIN category_tbl c ON bc.categoryId = c.categoryId WHERE bc.isbn13 = #{isbn13} ]]>
    <!-- 해당 책의 카테고리 정보를 조회 -->
  </select>

  <!-- 책 수정 -->
  <update id="update">
    <![CDATA[ UPDATE book_tbl SET book = #{book}, bookDescription = #{bookDescription, jdbcType=CLOB}, price = #{price, jdbcType=NUMERIC}, bookCount = #{bookCount, jdbcType=NUMERIC},
    averageRating = #{averageRating, jdbcType=NUMERIC}, rentalAvailable = #{rentalAvailable}, pageCount = #{pageCount, jdbcType=NUMERIC}, weight = #{weight, jdbcType=VARCHAR}, bookSize = #{bookSize, jdbcType=VARCHAR},
    star1Count = #{star1Count, jdbcType=CHAR}, star2Count = #{star2Count, jdbcType=CHAR}, star3Count = #{star3Count, jdbcType=CHAR}, star4Count = #{star4Count, jdbcType=CHAR}, star5Count = #{star5Count, jdbcType=CHAR}, reviewCount = #{reviewCount, jdbcType=NUMERIC} WHERE isbn13 = #{isbn13, jdbcType=NUMERIC} ]]>
    <!-- 책 정보를 수정 -->
  </update>

  <!-- 책 삭제 -->
  <delete id="delete">
    <![CDATA[ DELETE FROM book_tbl WHERE isbn13 = #{isbn13} ]]>
    <!-- 책을 삭제 -->
  </delete>

  <!-- 자동검색 기능용 제목검색 -->
  <select id="searchTitles" parameterType="string" resultType="kr.co.librarylyh.domain.BookListVO">
    <![CDATA[ SELECT book, author FROM book_tbl WHERE LOWER(book) LIKE '%' || LOWER(#{query}) || '%' AND ROWNUM <= 5 ORDER BY book ASC ]]>
    <!-- 책 제목을 검색하고, 최대 5개의 결과를 출력 -->
  </select>

  <!-- ISBN 중복 확인 -->
  <select id="checkIsbnExists" resultType="int">
    SELECT COUNT(*)
    FROM book_tbl
    WHERE isbn13 = #{isbn13, jdbcType=NUMERIC}
  </select>

</mapper>
